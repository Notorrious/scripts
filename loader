if game.PlaceId == 8357510970 then

    repeat wait() until game:IsLoaded()

    game:GetService("Players").LocalPlayer.Idled:Connect(function()
        game:GetService("VirtualUser"):ClickButton2(Vector2.new())
    end)
    _G.Settings = {
        autoTap = false;
        autoRebirth = false;
        autoPractice = false;
        autoEgg = false;
        autoUpgrade = false;
        autoRank = false;
        autoAura = false;
        autoWorld = false;
        tripleEgg = "1";
        autoMaxElite = false;
        autoMaxDivine = false;
        autoGrimoire = false;
    }

    local codes = {
        "14MVISITS";
        "Dreamzinho";
        "40KLIKES";
        "HERO";
        "35KLIKES";
        "50KFAVS";
        "10MVISITS";
        "30KLIKES";
        "8MVISITS";
        "BOLINHOBLOX";
        "25KLIKES";
        "VAGNERGAMES";
        "15klikes";
        "4MVisits";
        "2MVISITS";
        "10KLIKES";
        "5KLIKES";
        "1MVISITS";
        "MASTER";
        "500KVISITS";
        "250kvisits";
        "80KVISITS";
        "1KLIKES";
        "Release";
    }

    pcall(function()
        game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Error:Destroy()
        game:GetService("Players").LocalPlayer.PlayerGui.EggAnimation:Destroy()
    end)

    local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
    local tickk = tick()
    local reb = {"-- Rebirth Amount --"}
    local practiceArea = {"-- Practice Area --"}
    local egg = {"-- Select Egg --"}

    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Rebirths.Frame:GetChildren()) do
        if v:IsA("ImageLabel") and not table.find(reb,v.Price.Text) then
            table.insert(reb,v.Price.Text)
        end
    end

    for i, v in pairs(game.Workspace.__SETTINGS.__INTERACT:GetChildren()) do
        if v.Name == "Practice" and not table.find(practiceArea,v.Area.Value.." Boost: "..v.Boost.Value) then
            table.insert(practiceArea,v.Area.Value.." Boost: "..v.Boost.Value)
        end
    end 

    for i, v in pairs(game.Workspace.__SETTINGS.__INTERACT:GetChildren()) do
        if v.Name == "EGG" and not table.find(egg,v.Tier.Value) then 
            table.insert(egg,v.Tier.Value)
        end
    end
    function teleport(mob)
        Player.Character.HumanoidRootPart.CFrame = mob.CFrame
    end
    local library = loadstring(game:HttpGet("https://pastebin.com/raw/vB8nLMCk", true))()
    local b = library:CreateWindow("Farming")
    local c = library:CreateWindow("Heroes")
    local d = library:CreateWindow("Shop")
    local e = library:CreateWindow("Teleport")
    local f = library:CreateWindow("Misc")


    b:Toggle("Auto Tap", {flag = "a"}, function(v)
        _G.Settings.autoTap = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoTap then break end
                game:GetService("ReplicatedStorage").Remotes.TappingEvent:FireServer()
            end
        end)
    end)

    b:Toggle("Auto Rebirth", {flag = "b"}, function(v)
        _G.Settings.autoRebirth = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoRebirth then break end
                game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Rebirths",selectedNum)
            end
        end)
    end)

    b:Dropdown("Select Rebirth Amount", {flag = "c", list = reb}, function(value) 
        for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Rebirths.Frame:GetChildren()) do
            if v:IsA("ImageLabel") and v.Price.Text == tostring(value) then
                selectedNum = tonumber(v.Name)
            end
        end
    end)

    b:Toggle("Auto Practice", {flag = "d"}, function(v)
        _G.Settings.autoPractice = v
        
        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoPractice then break end
                for i, v in pairs(game.Workspace.__SETTINGS.__INTERACT:GetChildren()) do
                    if v.Name == "Practice" and v.Boost.Value == tonumber(selectedArea) then
                        plr.CFrame = v.CFrame * CFrame.new(0,0,5)
                        game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Practice",v)
                    end
                end
            end
        end)
    end)

    b:Dropdown("Select Practice Area", {flag = "e", list = practiceArea}, function(v) 
        selectedArea = string.match(v,"%d+")
    end)
    for i, v in pairs(game:GetService("Workspace")["__SETTINGS"]["__BOSS"]:GetChildren()) do
        b:Toggle("Farm Boss #"..i, {flag = "d"}, function(value)
            _G.i = value
            
            task.spawn(function()
                while task.wait() do
                    if not _G.i then break end
                    plr.CFrame = v.CFrame
                    game:GetService("ReplicatedStorage").Remotes.TappingEvent:FireServer()
                end
            end)
        end)
    end
    
    c:Toggle("Open Egg", {flag = "f"}, function(v)
        _G.Settings.autoEgg = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoEgg then break end
                plr.CFrame = selectedEgg.CFrame * CFrame.new(0,0,5)
                game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("EGG",selectedEgg,_G.Settings.tripleEgg,{})
            end
        end)
    end)

	c:Toggle("Triple Egg",{flag = "z"}, function(v)
		if c.flags.z then
			_G.Settings.tripleEgg = "3"
		else
			_G.Settings.tripleEgg = "1"
		end
	end)

    c:Dropdown("Select Egg", {flag = "g", list = egg}, function(value) 
        for i, v in pairs(game.Workspace.__SETTINGS.__INTERACT:GetChildren()) do
            if v.Name == "EGG" and v.Tier.Value == value then 
                selectedEgg = v
            end
        end 
    end)
    
    c:Toggle("Auto Max Elite", {flag = "asd"}, function(v)
        _G.Settings.autoMaxElite = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoMaxElite then break end
                game:GetService("ReplicatedStorage").Remotes.NPCSystem:InvokeServer(true,"MAXELITE")
                wait(1)
            end
        end)
    end)
    c:Toggle("Auto Max Divine", {flag = "asd"}, function(v)
        _G.Settings.autoMaxDivine = v
    
        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoMaxDivine then break end
                game:GetService("ReplicatedStorage").Remotes.NPCSystem:FireServer(true, "MAXDIVINE")
                wait(1)
            end
        end)
    end)

    d:Toggle("Buy Upgrade", {flag = "h"}, function(v)
        _G.Settings.autoUpgrade = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoUpgrade then break end
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Shop.Upgrades:GetChildren()) do
                    if v:IsA("ImageLabel") then
                        game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Upgrade",tonumber(v.Name))
                    end
                end
                
            end
        end)
    end)

    d:Toggle("Buy Rank", {flag = "i"}, function(v)
        _G.Settings.autoRank = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoRank then break end
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Shop.Ranks:GetChildren()) do
                    if v:IsA("ImageLabel") then
                        game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Ranks",tonumber(v.Name))
                    end
                end
                
            end
        end)
    end)

    d:Toggle("Buy Aura", {flag = "j"}, function(v)
        _G.Settings.autoAura = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoAura then break end
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Auras.Frame:GetChildren()) do
                    if v:IsA("ImageLabel") then
                        game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Auras",tonumber(v.Name))
                    end
                end
                
            end
        end)
    end)

    d:Toggle("Buy World", {flag = "asd"}, function(value)
        _G.Settings.autoWorld = value

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoWorld then break end
                for i, v in pairs(game:GetService("Workspace")["__SETTINGS"]["__AREAS"]:GetChildren()) do
                    game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Areas",v.Name)
                end
            end
        end)
    end)
    d:Toggle("Auto Buy Grimoire", {flag = "hdfgdsf"}, function(v)
        _G.Settings.autoGrimoire = v
    
        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoGrimoire then break end
                local args = {
                    [1] = "GRIMOIRE"
                }
                
                game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
                wait(0.5)
            end
        end)
    end)
    
    for i, v in pairs(game:GetService("Workspace")["__SETTINGS"]["__AREAS"]:GetChildren()) do
        e:Button(v.Name, function()
            plr.CFrame = v.CFrame
        end)
    end

    f:Button("New World",function()
        for i, v in pairs(game.Workspace.__Map:GetChildren()) do
            if v:FindFirstChild("TouchInterest") then
                firetouchinterest(v,plr,0)
            end
        end
    end)
    for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
        if v.Name == "Part" and v:FindFirstChild("Gui") and v.Gui:FindFirstChild("Info") then
            e:Button(v.Gui.Info.Text, function()
                plr.CFrame = v.CFrame
            end)
        end
    end
    f:Button("Redeem Codes", function()
        for i, v in pairs(codes) do
            game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Codes",v)
        end
    end)

    warn("Script loaded in",string.format("%.0f",tick()-tickk),"seconds")
elseif game.PlaceId == 8649665676 then
    game:GetService("Players").LocalPlayer.Idled:Connect(function()
        game:GetService("VirtualUser"):ClickButton2(Vector2.new())
    end)
    _G.selectedMob = "Krunks"
    _G.mobFarm = false
    _G.selectedMob = "Krunks"

    local mob = {}
    local farmPos = "Behind"

    for i, v in pairs(game.Workspace.NPCS:GetChildren()) do
        if not table.find(mob,v.Name) then
            table.insert(mob,v.Name)
        end
    end

    function getNear()
        local near
        local nearr = math.huge
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart

        for i, v in pairs(game:GetService("Workspace").NPCS:GetChildren()) do
            if v.Name == _G.selectedMob and (plr.Position - v.HumanoidRootPart.Position).Magnitude < nearr then
                near = v.HumanoidRootPart
                nearr = (plr.Position - v.HumanoidRootPart.Position).Magnitude
            end
        end

        return near
    end 

    function teleport(enemy)
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart

        if farmPos == "Under" then
            plr.CFrame = enemy.CFrame * CFrame.new(0,-10,0)
        elseif farmPos == "Behind" then
            plr.CFrame = enemy.CFrame * CFrame.new(0,0,5) 
        end
    end

    function noclip()
        for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end

    local library = loadstring(game:HttpGet("https://pastebin.com/raw/vB8nLMCk", true))()
    local w = library:CreateWindow("Farming")

    w:Toggle("Enabled", {flag = "a"}, function(value)
        _G.mobFarm = value
        
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-393.16705322266, 5.9964461326599, -405.14428710938)
        game.Workspace.Gravity = 198.2
    end)

    w:Dropdown("Dropdown", { flag = "dw", list = mob}, function(v)
        _G.selectedMob = v
    end)

    w:Dropdown("Farm Position", {flag = "a", list = {"Behind","Under"}}, function(v)
        farmPos = v
    end)

    if _G.lol then _G.lol:Disconnect() end
    _G.lol = game:GetService('RunService').Stepped:Connect(function()
        if _G.mobFarm then
            noclip()
            pcall(function()
                game.Workspace.Gravity = 0
                teleport(getNear())
                game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Tapping",getNear())
            end)
        end
    end)

elseif game.PlaceId == 8592863835 then
    repeat wait() until game:IsLoaded()
    _G.settingsTable = {
        autosell = false,
        autoegg = false,
        autodaily = false,
        autodailygroup = false,
        autoupgrademagnet = false,
        autoupgradespeed = false,
        autobuymagnet = false,
        autopowerups = false,
        autoenchant = false,
        selectedArea = 1,
        pref,
        walkSpeed1,
        magnet,

    }

    getgenv().Key = "password123"
    getgenv().anti_afk = true

    local world;
    local worldvalue
    local item;

    local Player = game:GetService("Players").LocalPlayer
    local delay = 1.5
    local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
    local autoattack = game:GetService("Players").LocalPlayer.Gamepasses["Pet Auto Attack"]
    local ninja = CFrame.new(6548.9, 0.85, -357.16)
    local void = CFrame.new(7451.85, 0.85, 291.201)
    local pirate = CFrame.new(5535.13, -0.45, 150.626)
    local world3 = CFrame.new(6464.45, 0.85, 390.75)
    local Heaven = CFrame.new(2873, 4, 485.6)
    local hel = CFrame.new(2607, 4, 477)
    local Ice = CFrame.new(2275, 4, 468)
    local Graveyard = CFrame.new(2010, 4, 462)
    local Wild_West_World = CFrame.new(1708, 4, 462)
    local Quarry_Mine = CFrame.new(887, 4, 421)
    local Volcanic_Field = CFrame.new(611, 4, 418)
    local Coral_Reef = CFrame.new(311, 4 , 418)
    local The_Jungle = CFrame.new(11, 4, 418)
    local The_Desert = CFrame.new(-288, 4, 418)
    local Spawn = CFrame.new(-588, 4, 418)
    local loc1 = CFrame.new(-797.541687, 1.93124998, 383.812073)
    local loc2 = CFrame.new(-749.623535, 1.93124998, 351.450165)
    local loc4 = CFrame.new(-681.882751, 1.93124998, 342.399292)
    local playerHead = game.Players.LocalPlayer.Character.Head
    local location1 = CFrame.new(813, 4, 485)
    local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
    getgenv().autoevolve = false;
    getgenv().tweenfarm = false
    getgenv().teleportfarm = false



    local New_CFrame = CFrame.new(5561,2,5)
    local New_CFrame1 = CFrame.new(5585,2,193)
    local New_CFrame2 = CFrame.new(5451,2,318)
    local ti = TweenInfo.new(1.5, Enum.EasingStyle.Linear)
    local ts = game:GetService('TweenService')







    local char = game.Players.LocalPlayer.Character
    local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart

    local part = game.Players.LocalPlayer.Character.HumanoidRootPart
    local tp;
    local tp1;
    local tp2;

    local multi = {};
    local sellArea = {};
    local egg = {}
    local worlds = {}
    local area = {}
    for i, v in pairs(game:GetService("Workspace").Rings:GetChildren()) do
        if string.match(v.Name,"%d+") then
            table.insert(sellArea,v.Name)
        end
    end

    table.sort(sellArea, function(a,b) return tonumber(string.match(a,"%d+")) > tonumber(string.match(b,"%d+")) end)

    for i, v in pairs(game:GetService("Workspace")["_Eggs"]:GetChildren()) do
        table.insert(egg,v.Name)
    end
    -- for i, v in pairs(game:GetService("Workspace")["_CoinStackSpawns"]:GetChildren()) do
    --     table.insert(worlds,v.Name)
    -- end
    for i, v in pairs(game:GetService("Players").LocalPlayer.Gamepasses:GetChildren()) do
        v.Value = true
    end
    pcall(function()
        game.Workspace._Effects:Destroy()
        game.Players.LocalPlayer.PlayerGui.Eggs:Destroy()
        game.Players.LocalPlayer.PlayerGui.Evolve:Destroy()
        game:GetService("Players").LocalPlayer.PlayerGui.Game.MidNotifications.Visible = false
        game:GetService("Players").LocalPlayer.PlayerGui.Game.Notifications.Visible = false
    end)


    local library = loadstring(game:HttpGet("https://pastebin.com/raw/vB8nLMCk", true))()
    local b = library:CreateWindow("Farming")
    local c = library:CreateWindow("Heroes")
    local d = library:CreateWindow("Shop")
    local e = library:CreateWindow("Teleport")
    local s = library:CreateWindow("Misc")


    local filename = "Magnet_Simulator_Settings.txt"


    function savesettings()
        print("-saving user setting...")
        local json;
        local HttpService = game:GetService("HttpService")
        if (writefile) then
            json = HttpService:JSONEncode(_G.settingsTable)
            writefile(filename, json)
        else
            print("-Unable to save settings due to your executor...")
        end
    end
    s:Button("Save Settings",function()
        savesettings()
    end)
    function loadsettings()
        print("-loading settings...")
        local HttpService = game:GetService("HttpService")
        if (readfile and isfile and isfile(filename))then
            _G.settingsTable = HttpService:JSONDecode(readfile(filename))
            print("-settings loaded")
        end
    end
    s:Button("Load Settings",function()
        loadsettings()
    end)
    s:Button("Clear Settings",function()
        _G.settingsTable.autosell = false
        _G.settingsTable.autoegg = false
        _G.settingsTabel.pref = nil
        _G.settingsTable.walkSpeed1 = nil
        _G.settingsTable.autoupgradespeed = nil
        _G.settingsTable.autoupgradestorage = nil
        _G.settingsTable.autoupgrademagnetspeed = nil
        _G.settingsTable.autoupgrademagnetpower = nil
        _G.settingsTable.autoupgrademagnetrange = nil
        _G.settingsTable.magnet = nil
        _G.settingsTable.autobuymagnet = nil

    end)
    s:Button("Made by Notorious", function()
        print("aa")
    end)
    b:Dropdown("--Select area--", {flag = "c", list = sellArea}, function(value)
    savesettings()
    multi = value 
    end)



    b:Toggle("Auto Sell", {flag = "a"}, function(v)
        _G.settingsTable.autosell = v
        savesettings()

        spawn(function()
            local seller = game:GetService("Workspace").Rings
            while _G.settingsTable.autosell do
                for i,v in pairs(game:GetService("Workspace").Rings:GetDescendants()) do
                    if v.Name == "TouchInterest" then
                        local sell = game:GetService("Workspace")["Rings"][multi].Touch.TouchInterest
                        firetouchinterest(playerHead, sell.Parent, 0)
                        wait(0.1)
                        firetouchinterest(playerHead, sell.Parent, 1)
                    end
                end
            end
        end)
    end)


    -- b:Toggle("Auto Tween Farm", {flag = "a"}, function(v)
    --     getgenv().tweenfarm = v

    --     spawn(function()
    --         while getgenv().tweenfarm == true do
    --             ts:Create(part, ti, tp):Play()
    --             wait(delay)
    --             ts:Create(part, ti, tp1):Play()
    --             wait(delay)
    --             ts:Create(part, ti, tp2):Play()
    --             wait(delay)
    --         end
    --     end)
    -- end)
    b:Toggle("Auto Teleport Farm", {flag = "a"}, function(v)
        getgenv().teleportfarm = v

        spawn(function()
            while getgenv().teleportfarm == true do
                p1.CFrame = tp;
                wait(delay)
                p1.CFrame = tp1;
                wait(delay)
                p1.CFrame = tp2;
                wait(delay)
                p1.CFrame = tp4;
                wait(delay)
            end
        end)
    end)

    b:Toggle("Auto Collect Power Ups", {flag = "a"}, function(v)
        _G.settingsTable.autopowerups = v
        savesettings()

        spawn(function()
            while _G.settingsTable.autopowerups == true do
                while wait(0.5) do
                    if not _G.settingsTable.autopowerups then break end
                    for i, v in pairs(game:GetService("Workspace")["_PlayerPowerUps"][game.Players.LocalPlayer.Name]:GetChildren()) do
                        for a, b in pairs(v:GetChildren()) do
                            if b.Name == "TouchInterest" then
                                firetouchinterest(plr,b.Parent,0) task.wait()
                                firetouchinterest(plr,b.Parent,1)
                            end
                        end
                    end
                end
            end
        end)
    end)
    b:Toggle("Auto Enchant", {flag = "a"}, function(v)
        _G.settingsTable.autoenchant = v
        savesettings()

        spawn(function()
            while _G.settingsTable.autoenchant == true do
                while wait(2) do
                    if not _G.settingsTable.autoenchant then break end
                    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Game.OpenableUi.Enchantments.Main.Top.Main:GetChildren()) do
                        if v:IsA("Frame") then
                            game:GetService("ReplicatedStorage").Events.GameEvents.UseEnchantment:InvokeServer(tonumber(v.Name))
                        end
                    end
                end
            end
        end)
    end)
    b:Button("Position 1", function()
        local plr = game.Players.LocalPlayer
        local New_CFrame = plr.Character.HumanoidRootPart.CFrame
        tp = New_CFrame
    end)
    b:Button("Position 2", function()
        local plr = game.Players.LocalPlayer
        local New_CFrame1 = plr.Character.HumanoidRootPart.CFrame
        tp1 = New_CFrame1
    end)

    b:Button("Position 3", function()
        local plr = game.Players.LocalPlayer
        local New_CFrame2 = plr.Character.HumanoidRootPart.CFrame
        tp2 = New_CFrame2
    end)
    b:Button("Position 4", function()
        local plr = game.Players.LocalPlayer
        local New_CFrame4 = plr.Character.HumanoidRootPart.CFrame
        tp4 = New_CFrame4
    end)

    c:Toggle("Auto Egg", {flag = "a"}, function(v)
        savesettings()
        _G.settingsTable.autoegg = v


        spawn(function()
            while _G.settingsTable.autoegg == true
            do
                wait(0.25)
                local args = {
                    [1] = _G.settingsTable.pref
                }

                game:GetService("ReplicatedStorage").Events.GameEvents.BuyEgg:FireServer(unpack(args))

            end
        end)


    end)
    c:Dropdown("--Select an egg--", {flag = "c", list = egg}, function(value)
    savesettings()
    _G.settingsTable.pref = value 

    end)

    for i, v in pairs(game:GetService("Workspace")["_CoinStackSpawns"]:GetChildren()) do
        e:Button(v.Name, function()
            plr.CFrame = v.CFrame
        end)
    end
    d:Toggle("Auto Buy Magnet", {flag = "a"}, function(v)
        _G.settingsTable.autoupgrademagnet = v
        savesettings()
        spawn(function()
            while _G.settingsTable.autobuymagnet == true do
                while wait(1) do
                    if not _G.settingsTable.autobuymagnet then break end
                    for i, v in pairs(game:GetService("Workspace").MagnetShop.Magnets:GetChildren()) do
                        game:GetService("ReplicatedStorage").Events.GameEvents.BuyMagnet:FireServer(v.Name) wait(.5)
                    end
                end
            end
        end)
    end)
    d:Toggle("Auto Upgrade Magnet", {flag = "a"}, function(v)
        _G.settingsTable.autoupgrademagnet = v
        savesettings()
        spawn(function()
            while _G.settingsTable.autoupgrademagnet == true do
                while wait(1) do
                    if not _G.settingsTable.autoupgrademagnet then break end
                    for i, v in pairs(game:GetService("Players").LocalPlayer.StarterGear:GetChildren()) do
                            currentMagnet = v.Name
                    end
                    game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeMagnet:FireServer(currentMagnet,"Range")
                    game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeMagnet:FireServer(currentMagnet,"Power")
                    game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeMagnet:FireServer(currentMagnet,"Speed")
                end
            end 
        end)
    end)
    d:Toggle("Auto Upgrade Storage", {flag = "a"}, function(v)
        _G.settingsTable.autoupgradestorage = v
        savesettings()
        spawn(function()
            while _G.settingsTable.autoupgradestorage == true do
                wait(1)
                game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeStorage:FireServer()
            end 
        end)
    end)
    d:Toggle("Auto Upgrade Speed", {flag = "a"}, function(v)
        _G.settingsTable.autoupgrademagnetspeed = v
        savesettings()
        spawn(function()
            while _G.settingsTable.autoupgrademagnetspeed == true do
                wait(1)
                game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeSpeed:FireServer()
            end 
        end)
    end)
    d:Button("Magnet Shop", function()
        spawn(function()
            local magnetupgrade = game:GetService("Workspace")["_UpgradeRings"].Magnet.Touch.TouchInterest
            firetouchinterest(playerHead, magnetupgrade.Parent, 0)
            wait(0.1)
            firetouchinterest(playerHead, magnetupgrade.Parent, 1)
            wait()
        end)
    end)
    d:Button("Storage Shop", function()
        spawn(function()
            local storage = game:GetService("Workspace")["_UpgradeRings"].Storage.Touch.TouchInterest
            firetouchinterest(playerHead, storage.Parent, 0)
            wait(0.1)
            firetouchinterest(playerHead, storage.Parent, 1)
            wait()
        end)
    end)
    d:Button("Speed Shop", function()
        spawn(function()
            local speedupgrade = game:GetService("Workspace")["_UpgradeRings"].Speed.Touch.TouchInterest
            firetouchinterest(playerHead, speedupgrade.Parent, 0)
            wait(0.1)
            firetouchinterest(playerHead, speedupgrade.Parent, 1)
            wait()
        end)
    end)


    Misc:AddBind({
        text = "Toggle GUI", 
        key = "LeftControl", 
        callback = function() 
            library:Close()
        end
    })

    library:Init()



    spawn(function()
        while getgenv().anti_afk == true do
            wait(900)
            local vu = game:GetService("VirtualUser")
            game:GetService("Players").LocalPlayer.Idled:connect(function()
            vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            wait(1)
            vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            print("-anti-afk has done the job!")
            end)
        end
    end)


    -- f:Button("New World",function()
    -- end)
        
    -- e:Button("The Pirate World",function()
    --     p1.CFrame = pirate;
    -- end)
    -- e:Button("The Void World",function()
    --     p1.CFrame = void;
    -- end)
    -- e:Button("The Ninja World",function()
    --     p1.CFrame = ninja;
    -- end)
    -- e:Button("World 3",function()
    --     p1.CFrame = world3;
    -- end)
    -- e:Button("The Heaven World",function()
    --     p1.CFrame = Heaven;
    -- end)
    -- e:Button("The Hell World",function()
    --     p1.CFrame = hel;
    -- end)
    -- e:Button("The Ice World",function()
    --     p1.CFrame = Ice;
    -- end)
    -- e:Button("The Graveyard World",function()
    --     p1.CFrame = Graveyard;
    -- end)
    -- e:Button("Wild West World",function()
    --     p1.CFrame = Wild_West_World;
    -- end)
    -- e:Button("Quarry Mine World",function()
    --     p1.CFrame = Quarry_Mine;
    -- end)
    -- e:Button("Volcanic Field World",function()
    --     p1.CFrame = Volcanic_Field;
    -- end)
    -- e:Button("Coral Reef World",function()
    --     p1.CFrame = Coral_Reef;
    -- end)
    -- e:Button("The Jungle World",function()
    --     p1.CFrame = The_Jungle;
    -- end)
    -- e:Button("The Desert World",function()
    --     p1.CFrame = The_Desert;
    -- end)
    -- e:Button("The Spawn World",function()
    --     p1.CFrame = Spawn;
    -- end)
    -- local bb = game:GetService("VirtualUser")
    -- game:GetService("Players").LocalPlayer.Idled:Connect(function()
    -- 	bb:CaptureController()
    -- 	bb:ClickButton2(Vector2.new())
    -- end)
end
