--[[
https://www.roblox.com/games/8357510970/
loadstring(game:HttpGet("https://scriptblox.com/raw/AnimePunchingCopy_586"))()
--]]

if game.PlaceId == 8357510970 then

    repeat wait() until game:IsLoaded()

    _G.Settings = {
        autoTap = false;
        autoRebirth = false;
        autoPractice = false;
        autoEgg = false;
        autoUpgrade = false;
        autoRank = false;
        autoAura = false;
        autoWorld = false;
        tripleEgg = "1";
        autoMaxElite = false;
    }

    local codes = {
        "14MVISITS";
        "Dreamzinho";
        "40KLIKES";
        "HERO";
        "35KLIKES";
        "50KFAVS";
        "10MVISITS";
        "30KLIKES";
        "8MVISITS";
        "BOLINHOBLOX";
        "25KLIKES";
        "VAGNERGAMES";
        "15klikes";
        "4MVisits";
        "2MVISITS";
        "10KLIKES";
        "5KLIKES";
        "1MVISITS";
        "MASTER";
        "500KVISITS";
        "250kvisits";
        "80KVISITS";
        "1KLIKES";
        "Release";
    }

    pcall(function()
        game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Error:Destroy()
        game:GetService("Players").LocalPlayer.PlayerGui.EggAnimation:Destroy()
    end)

    local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
    local tickk = tick()
    local reb = {"-- Rebirth Amount --"}
    local practiceArea = {"-- Practice Area --"}
    local egg = {"-- Select Egg --"}

    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Rebirths.Frame:GetChildren()) do
        if v:IsA("ImageLabel") and not table.find(reb,v.Price.Text) then
            table.insert(reb,v.Price.Text)
        end
    end

    for i, v in pairs(game.Workspace.__SETTINGS.__INTERACT:GetChildren()) do
        if v.Name == "Practice" and not table.find(practiceArea,v.Area.Value.." Boost: "..v.Boost.Value) then
            table.insert(practiceArea,v.Area.Value.." Boost: "..v.Boost.Value)
        end
    end 

    for i, v in pairs(game.Workspace.__SETTINGS.__INTERACT:GetChildren()) do
        if v.Name == "EGG" and not table.find(egg,v.Tier.Value) then 
            table.insert(egg,v.Tier.Value)
        end
    end

    local library = loadstring(game:HttpGet("https://pastebin.com/raw/vB8nLMCk", true))()
    local b = library:CreateWindow("Farming")
    local c = library:CreateWindow("Heroes")
    local d = library:CreateWindow("Shop")
    local e = library:CreateWindow("Teleport")
    local f = library:CreateWindow("Misc")

    b:Toggle("Auto Tap", {flag = "a"}, function(v)
        _G.Settings.autoTap = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoTap then break end
                game:GetService("ReplicatedStorage").Remotes.TappingEvent:FireServer()
            end
        end)
    end)

    b:Toggle("Auto Rebirth", {flag = "b"}, function(v)
        _G.Settings.autoRebirth = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoRebirth then break end
                game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Rebirths",selectedNum)
            end
        end)
    end)

    b:Dropdown("Select Rebirth Amount", {flag = "c", list = reb}, function(value) 
        for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Rebirths.Frame:GetChildren()) do
            if v:IsA("ImageLabel") and v.Price.Text == tostring(value) then
                selectedNum = tonumber(v.Name)
            end
        end
    end)

    b:Toggle("Auto Practice", {flag = "d"}, function(v)
        _G.Settings.autoPractice = v
        
        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoPractice then break end
                for i, v in pairs(game.Workspace.__SETTINGS.__INTERACT:GetChildren()) do
                    if v.Name == "Practice" and v.Boost.Value == tonumber(selectedArea) then
                        plr.CFrame = v.CFrame * CFrame.new(0,0,5)
                        game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Practice",v)
                    end
                end
            end
        end)
    end)

    b:Dropdown("Select Practice Area", {flag = "e", list = practiceArea}, function(v) 
        selectedArea = string.match(v,"%d+")
    end)

    c:Toggle("Open Egg", {flag = "f"}, function(v)
        _G.Settings.autoEgg = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoEgg then break end
                plr.CFrame = selectedEgg.CFrame * CFrame.new(0,0,5)
                game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("EGG",selectedEgg,_G.Settings.tripleEgg,{})
            end
        end)
    end)

	c:Toggle("Triple Egg",{flag = "z"}, function(v)
		if c.flags.z then
			_G.Settings.tripleEgg = "3"
		else
			_G.Settings.tripleEgg = "1"
		end
	end)

    c:Dropdown("Select Egg", {flag = "g", list = egg}, function(value) 
        for i, v in pairs(game.Workspace.__SETTINGS.__INTERACT:GetChildren()) do
            if v.Name == "EGG" and v.Tier.Value == value then 
                selectedEgg = v
            end
        end 
    end)
    
    c:Toggle("Auto Max Elite", {flag = "asd"}, function(v)
        _G.Settings.autoMaxElite = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoMaxElite then break end
                game:GetService("ReplicatedStorage").Remotes.NPCSystem:InvokeServer(true,"MAXELITE")
            end
        end)
    end)

    d:Toggle("Buy Upgrade", {flag = "h"}, function(v)
        _G.Settings.autoUpgrade = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoUpgrade then break end
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Shop.Upgrades:GetChildren()) do
                    if v:IsA("ImageLabel") then
                        game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Upgrade",tonumber(v.Name))
                    end
                end
                
            end
        end)
    end)

    d:Toggle("Buy Rank", {flag = "i"}, function(v)
        _G.Settings.autoRank = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoRank then break end
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Shop.Ranks:GetChildren()) do
                    if v:IsA("ImageLabel") then
                        game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Ranks",tonumber(v.Name))
                    end
                end
                
            end
        end)
    end)

    d:Toggle("Buy Aura", {flag = "j"}, function(v)
        _G.Settings.autoAura = v

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoAura then break end
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Ui.CenterFrame.Auras.Frame:GetChildren()) do
                    if v:IsA("ImageLabel") then
                        game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Auras",tonumber(v.Name))
                    end
                end
                
            end
        end)
    end)

    d:Toggle("Buy World", {flag = "asd"}, function(value)
        _G.Settings.autoWorld = value

        task.spawn(function()
            while task.wait() do
                if not _G.Settings.autoWorld then break end
                for i, v in pairs(game:GetService("Workspace")["__SETTINGS"]["__AREAS"]:GetChildren()) do
                    game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Areas",v.Name)
                end
            end
        end)
    end)

    for i, v in pairs(game:GetService("Workspace")["__SETTINGS"]["__AREAS"]:GetChildren()) do
        e:Button(v.Name, function()
            plr.CFrame = v.CFrame
        end)
    end

    f:Button("New World",function()
        for i, v in pairs(game.Workspace.__Map:GetChildren()) do
            if v:FindFirstChild("TouchInterest") then
                firetouchinterest(v,plr,0)
            end
        end
    end)
        
    f:Button("Redeem Codes", function()
        for i, v in pairs(codes) do
            game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Codes",v)
        end
    end)

    warn("Script loaded in",string.format("%.0f",tick()-tickk),"seconds")
elseif game.PlaceId == 8649665676 then
        _G.selectedMob = "Krunks"
        _G.mobFarm = false
    _G.selectedMob = "Krunks"

    local mob = {}
    local farmPos = "Behind"

    for i, v in pairs(game.Workspace.NPCS:GetChildren()) do
        if not table.find(mob,v.Name) then
            table.insert(mob,v.Name)
        end
    end

    function getNear()
        local near
        local nearr = math.huge
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart

        for i, v in pairs(game:GetService("Workspace").NPCS:GetChildren()) do
            if v.Name == _G.selectedMob and (plr.Position - v.HumanoidRootPart.Position).Magnitude < nearr then
                near = v.HumanoidRootPart
                nearr = (plr.Position - v.HumanoidRootPart.Position).Magnitude
            end
        end

        return near
    end 

    function teleport(enemy)
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart

        if farmPos == "Under" then
            plr.CFrame = enemy.CFrame * CFrame.new(0,-10,0)
        elseif farmPos == "Behind" then
            plr.CFrame = enemy.CFrame * CFrame.new(0,0,5) 
        end
    end

    function noclip()
        for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end

    local library = loadstring(game:HttpGet("https://pastebin.com/raw/vB8nLMCk", true))()
    local w = library:CreateWindow("Farming")

    w:Toggle("Enabled", {flag = "a"}, function(value)
        _G.mobFarm = value
        
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-393.16705322266, 5.9964461326599, -405.14428710938)
        game.Workspace.Gravity = 198.2
    end)

    w:Dropdown("Dropdown", { flag = "dw", list = mob}, function(v)
        _G.selectedMob = v
    end)

    w:Dropdown("Farm Position", {flag = "a", list = {"Behind","Under"}}, function(v)
        farmPos = v
    end)

    if _G.lol then _G.lol:Disconnect() end
    _G.lol = game:GetService('RunService').Stepped:Connect(function()
        if _G.mobFarm then
            noclip()
            pcall(function()
                game.Workspace.Gravity = 0
                teleport(getNear())
                game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer("Tapping",getNear())
            end)
        end
    end)
elseif game.PlaceId == 8592863835 then
    repeat wait() until game:IsLoaded()
    
    _G.settingsTable = {
        autosell = false,
        autoegg = false,
        autodaily = false,
        autodailygroup = false,
        autoupgrademagnet = false,
        autoupgradespeed = false,
        autobuymagnet = false,
        autopowerups = false,
        autoenchant = false,
        pref,
        walkSpeed1,
        magnet,

    }
    getgenv().Key = "password123"
    getgenv().anti_afk = true
    local world;
    local item;
    local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
    local sell = game:GetService("Workspace").Rings.Sellx25.Touch.TouchInterest
    local autoattack = game:GetService("Players").LocalPlayer.Gamepasses["Pet Auto Attack"]
    local Heaven = CFrame.new(2873, 4, 485.6)
    local hel = CFrame.new(2607, 4, 477)
    local Ice = CFrame.new(2275, 4, 468)
    local Graveyard = CFrame.new(2010, 4, 462)
    local Wild_West_World = CFrame.new(1708, 4, 462)
    local Quarry_Mine = CFrame.new(887, 4, 421)
    local Volcanic_Field = CFrame.new(611, 4, 418)
    local Coral_Reef = CFrame.new(311, 4 , 418)
    local The_Jungle = CFrame.new(11, 4, 418)
    local The_Desert = CFrame.new(-288, 4, 418)
    local Spawn = CFrame.new(-588, 4, 418)
    local loc1 = CFrame.new(-797.541687, 1.93124998, 383.812073)
    local loc2 = CFrame.new(-749.623535, 1.93124998, 351.450165)
    local loc4 = CFrame.new(-681.882751, 1.93124998, 342.399292)
    local playerHead = game.Players.LocalPlayer.Character.Head
    local location1 = CFrame.new(813, 4, 485)
    local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
    getgenv().autoevolve = false;
    pcall(function()
        game.Workspace._Effects:Destroy()
        game.Players.LocalPlayer.PlayerGui.Eggs:Destroy()
        game.Players.LocalPlayer.PlayerGui.Evolve:Destroy()
        game:GetService("Players").LocalPlayer.PlayerGui.Game.MidNotifications.Visible = false
        game:GetService("Players").LocalPlayer.PlayerGui.Game.Notifications.Visible = false
    end) 

    local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

    local w = library:CreateWindow("Notorious Hub") -- Creates the window

    local d = w:CreateFolder("Farming")

    local r = w:CreateFolder("Sections")

    local b = w:CreateFolder("Eggs")

    local c = w:CreateFolder("Gamepasses")

    local v = w:CreateFolder("Auto Upgrade")

    local q = w:CreateFolder("Teleporter")

    local a = w:CreateFolder("Misc")

    local s = w:CreateFolder("Settings")

    local e = w:CreateFolder("Destroy")

    e:DestroyGui()


    local filename = "Magnet_Simulator_Settings.txt"


    function savesettings()
        print("-saving user setting...")
        local json;
        local HttpService = game:GetService("HttpService")
        if (writefile) then
            json = HttpService:JSONEncode(_G.settingsTable)
            writefile(filename, json)
        else
            print("-Unable to save settings due to your executor...")
        end
    end
    s:Button("Save Settings",function()
        savesettings()
    end)
    function loadsettings()
        print("-loading settings...")
        local HttpService = game:GetService("HttpService")
        if (readfile and isfile and isfile(filename))then
            _G.settingsTable = HttpService:JSONDecode(readfile(filename))
            print("-settings loaded")
        end
    end
    s:Button("Load Settings",function()
        loadsettings()
    end)

    
    d:Toggle("AutoSell",function(bool)
        _G.settingsTable.autosell = bool
        savesettings()
        if bool then
            doSell1()
        end
    end)
    d:Toggle("Auto Collect Power Ups",function(bool)
        _G.settingsTable.autopowerups = bool
        savesettings()
        if bool then
            doCollectPowerUps()
        end
    end)
    b:Toggle("Auto Evolve",function(bool)
        getgenv().autoevolve = bool
        savesettings()
        if bool then
            doevolve()
        end
    end)
    d:Toggle("Auto Enchant",function(bool)
        _G.settingsTable.autoenchant = bool
        savesettings()
        if bool then
            doAutoEnchant()
        end
    end)
    b:Toggle("AutoEgg",function(bool)
        _G.settingsTable.autoegg = bool
        savesettings()
        if bool then
            doEgg()
        end
    end) 
    v:Toggle("Auto Magnet Buyerr",function(bool)
        _G.settingsTable.autobuymagnet = bool
        savesettings()
         if bool then
            doAutoBuyMagnet()
        end
    end)
    v:Toggle("Auto Upgrade Magnet",function(bool)
        _G.settingsTable.autoupgrademagnet = bool
        savesettings()
         if bool then
            doUpgradeMagnet()
        end
    end)
    v:Toggle("Auto Upgrade Storage",function(bool)
        _G.settingsTable.autoupgradestorage = bool
        savesettings()
         if bool then
            doUpgradeStorage()
        end
    end)
    v:Toggle("Auto Upgrade Speed",function(bool)
        _G.settingsTable.autoupgradespeed = bool
        savesettings()
         if bool then
            doUpgradeSpeed()
        end
    end)
    a:Toggle("AutoDaily",function(bool)
        _G.settingsTable.autodaily = bool
        savesettings()
        if bool then
            doDaily()
        end
    end) 
    a:Box("Speed Hack(eazy)","number",function(bal) -- "number" or "string"
        savesettings()
        _G.settingsTable.walkSpeed1 = bal;
        local walkSpeed = _G.settingsTable.walkSpeed1;

        local gmt = getrawmetatable(game)

        setreadonly(gmt, false)

        local oldindex = gmt.__index

        gmt.__index = newcclosure(function(self,b)

        if b == "WalkSpeed" then

        return 16

        end

        return oldindex(self,b)

        end)



        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeed
    end)
    a:Toggle("Anti Afk",function(bool)
        getgenv().anti_afk = bool
        if bool then
            doNoAfkAnti()
        end
    end)

    b:Dropdown("Choose an egg",{"Common Egg","Rookie Egg","Desert Egg","Jungle Egg","Aquatic Egg","Volcanic Egg","Crystal Egg","Wild West Egg","Graveyard Egg","Frost Egg","Hell Egg","Heaven Egg","Secret Egg"},true,function(val) --true/false, replaces the current title "Dropdown" with the option that t
        savesettings()
        _G.settingsTable.pref = val
    end)

    c:Button("Unlock Gamepasses",function()
        for i, v in pairs(game:GetService("Players").LocalPlayer.Gamepasses:GetChildren()) do
            v.Value = true
        end
    end)
    q:Button("The Heaven World",function()
        p1.CFrame = Heaven;
    end)
    q:Button("The Hell World",function()
        p1.CFrame = hel;
    end)
    q:Button("The Ice World",function()
        p1.CFrame = Ice;
    end)
    q:Button("The Graveyard World",function()
        p1.CFrame = Graveyard;
    end)
    q:Button("Wild West World",function()
        p1.CFrame = Wild_West_World;
    end)
    q:Button("Quarry Mine World",function()
        p1.CFrame = Quarry_Mine;
    end)
    q:Button("Volcanic Field World",function()
        p1.CFrame = Volcanic_Field;
    end)
    q:Button("Coral Reef World",function()
        p1.CFrame = Coral_Reef;
    end)
    q:Button("The Jungle World",function()
        p1.CFrame = The_Jungle;
    end)
    q:Button("The Desert World",function()
        p1.CFrame = The_Desert;
    end)
    q:Button("The Spawn World",function()
        p1.CFrame = Spawn;
    end)
    r:Button("Magnet Shop",function()
        doMagnet1()
    end)
    r:Button("Upgrade Storage",function()
        doUpgrade1()
    end)
    r:Button("Upgrade Speed",function()
        doSpeed1()
    end)
    r:Button("Enchantments",function()
        doEnchant1()
    end)
    



    ------------------------------------------------------------------------Functions-------------------------------------------------------------------------------------------------------------






    function doNoAfkAnti()
        spawn(function()
            while getgenv().anti_afk == true do
                wait(900)
                local vu = game:GetService("VirtualUser")
                game:GetService("Players").LocalPlayer.Idled:connect(function()
                vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                wait(1)
                vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                print("-anti-afk has done the job!")
                end)
            end
        end)
    end
    function doSell1()
        spawn(function()
            while _G.settingsTable.autosell do
                firetouchinterest(playerHead, sell.Parent, 0)
                wait(0.1)
                firetouchinterest(playerHead, sell.Parent, 1)
            end
        end)
    end
    function doEnchant1()
        spawn(function()
            for i,v in pairs(game:GetService("Workspace").Rings.Enchantments:GetDescendants()) do
                if v.Name == "TouchInterest" then
                    firetouchinterest(playerHead, v.Parent, 0)
                    wait(0.1)
                    firetouchinterest(playerHead, v.Parent, 1)
                    wait()
                end
            end
        end)
    end
    function doEgg()
        spawn(function()
            while _G.settingsTable.autoegg == true
             do
                wait(0.25)
                local args = {
                    [1] = _G.settingsTable.pref
                }

                game:GetService("ReplicatedStorage").Events.GameEvents.BuyEgg:FireServer(unpack(args))

            end
        end)
    end  
    function doUpgrade1()
        spawn(function()
            local storage = game:GetService("Workspace")["_UpgradeRings"].Storage.Touch.TouchInterest
            firetouchinterest(playerHead, storage.Parent, 0)
            wait(0.1)
            firetouchinterest(playerHead, storage.Parent, 1)
            wait()
        end)
    end
    function doMagnet1()
        spawn(function()
            local magnetupgrade = game:GetService("Workspace")["_UpgradeRings"].Magnet.Touch.TouchInterest
            firetouchinterest(playerHead, magnetupgrade.Parent, 0)
            wait(0.1)
            firetouchinterest(playerHead, magnetupgrade.Parent, 1)
            wait()
        end)
    end
    function doSpeed1()
        spawn(function()
            local speedupgrade = game:GetService("Workspace")["_UpgradeRings"].Speed.Touch.TouchInterest
            firetouchinterest(playerHead, speedupgrade.Parent, 0)
            wait(0.1)
            firetouchinterest(playerHead, speedupgrade.Parent, 1)
            wait()
        end)
    end 
    function doDaily()
        spawn(function()
            game:GetService("Players").LocalPlayer.InGroup.Value = true
            while getgenv().autodaily do
                if not getgenv().autodaily then break end
                local part1 = game:GetService("Workspace")["_Dailys"].GroupDaily.Ring.Touch.TouchInterest
                local part2 = game:GetService("Workspace")["_Dailys"].Daily.Ring.Touch.TouchInterest
                firetouchinterest(plr,part1.Parent,0)
                firetouchinterest(plr,part1.Parent,1)
                wait(2)
                firetouchinterest(plr,part2.Parent,0)
                firetouchinterest(plr,part2.Parent,1)
            end
        end)
    end
    function doUpgradeMagnet()
        spawn(function()
            while _G.settingsTable.autoupgrademagnet == true do
                while wait(1) do
                    if not _G.settingsTable.autoupgrademagnet then break end
                    for i, v in pairs(game:GetService("Players").LocalPlayer.StarterGear:GetChildren()) do
                            currentMagnet = v.Name
                    end
                    game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeMagnet:FireServer(currentMagnet,"Range")
                    game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeMagnet:FireServer(currentMagnet,"Power")
                    game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeMagnet:FireServer(currentMagnet,"Speed")
                end
            end 
        end)
    end
    function doUpgradeStorage()
        spawn(function()
            while _G.settingsTable.autoupgradestorage == true do
                wait(1)
                game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeStorage:FireServer()
            end 
        end)
    end
    function doUpgradeSpeed()
        spawn(function()
            while _G.settingsTable.autoupgrademagnetspeed == true do
                wait(1)
                game:GetService("ReplicatedStorage").Events.GameEvents.UpgradeSpeed:FireServer()
            end 
        end)
    end
    function doAutoBuyMagnet()
        spawn(function()
            while _G.settingsTable.autobuymagnet == true do
                while wait(1) do
                    if not _G.settingsTable.autobuymagnet then break end
                    for i, v in pairs(game:GetService("Workspace").MagnetShop.Magnets:GetChildren()) do
                        game:GetService("ReplicatedStorage").Events.GameEvents.BuyMagnet:FireServer(v.Name) wait(.5)
                    end
                end
            end
        end)
    end
    function doCollectPowerUps()
        spawn(function()
            while _G.settingsTable.autopowerups == true do
                while wait(0.5) do
                    if not _G.settingsTable.autopowerups then break end
                    for i, v in pairs(game:GetService("Workspace")["_PlayerPowerUps"][game.Players.LocalPlayer.Name]:GetChildren()) do
                        for a, b in pairs(v:GetChildren()) do
                            if b.Name == "TouchInterest" then
                                firetouchinterest(plr,b.Parent,0) task.wait()
                                firetouchinterest(plr,b.Parent,1)
                            end
                        end
                    end
                end
            end
        end)
    end
    function doAutoEnchant()
        spawn(function()
            while _G.settingsTable.autoenchant == true do
                while wait(2) do
                    if not _G.settingsTable.autoenchant then break end
                    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Game.OpenableUi.Enchantments.Main.Top.Main:GetChildren()) do
                        if v:IsA("Frame") then
                            game:GetService("ReplicatedStorage").Events.GameEvents.UseEnchantment:InvokeServer(tonumber(v.Name))
                        end
                    end
                end
            end
        end)
    end
    function doevolve(lulw)
        local pet = {}
        for i, v in pairs(game:GetService("ReplicatedStorage").ReplicatedData[game.Players.LocalPlayer.Name].Pets:GetChildren()) do
            if not table.find(pet,v.Type.Value) then
                table.insert(pet,v.Type.Value)
            end
        end
    
        if #pet >= 1 then
            local arr = {}
            local asd = math.random(1,#pet)
        
            for i, v in pairs(game:GetService("ReplicatedStorage").ReplicatedData[game.Players.LocalPlayer.Name].Pets:GetChildren()) do
                if string.match(v.Type.Value,pet[asd]) and string.match(tostring(v.Evolution.Value),lulw) then
                    table.insert(arr,tonumber(v.Name))
                end
            end
            
            if #arr >= 4 then
                local args = {}
                for i = 1, 4 do
                    args[#args+1] = arr[#args+1]
                end
                game:GetService("ReplicatedStorage").Events.PetEvents.Evolve:FireServer(args)
            end
        end
    end
    
    -- print("-----Settings are------")
    -- for i, v in pairs(_G.settingsTable) do
    --     print(i, v)
    -- end
    -- print("------END--------")

    -- loadsettings()
    -- if _G.settingsTable.autosell then
    --     doSell1()
    -- end
    -- if _G.settingsTable.autoegg then
    --     doEgg()
    -- end
    -- if _G.settingsTable.autodaily then
    --     doDaily1()
    -- end
    -- if _G.settingsTable.autodailygroup then
    --     doDailyGroup1()
    -- end
    -- print("-----Settings are------")
    -- for i, v in pairs(_G.settingsTable) do
    --     print(i, v)
    -- end
    -- print("------END--------")

    s:Button("Clear Settings",function()
        _G.settingsTable.autosell = false
        _G.settingsTable.autoegg = false
        _G.settingsTabel.pref = nil
        _G.settingsTable.walkSpeed1 = nil
        _G.settingsTable.autoupgradespeed = nil
        _G.settingsTable.autoupgradestorage = nil
        _G.settingsTable.autoupgrademagnetspeed = nil
        _G.settingsTable.autoupgrademagnetpower = nil
        _G.settingsTable.autoupgrademagnetrange = nil
        _G.settingsTable.magnet = nil
        _G.settingsTable.autobuymagnet = nil

    end)

elseif game.PlaceId == 7560156054 then
        -- inf jump
    local a = game:GetService("Players").LocalPlayer.PlayerScripts.Client.Main.doubleJumping
    for i, v in pairs(getgc()) do
        if typeof(v) == 'function' and getfenv(v).script == a then
            for i2, v2 in pairs(getupvalues(v)) do
                if type(v2) == 'number' then
                    setupvalue(v,i2,9e9)
                end
            end
        end
    end

    -- gamepass
    local b = require(game:GetService("ReplicatedStorage").ShopModule)
    local gpData = game:GetService("Players").LocalPlayer.Data.gamepasses
    for i, v in pairs(b.Gamepasses) do
        gpData.Value = gpData.Value..';'..v.Label..';'
    end

    -- boost
    for i, v in pairs(game:GetService("Players").LocalPlayer.Boosts:GetChildren()) do
        v:FindFirstChild("isActive").Value = true
    end
elseif game.PlaceId == 8540346411 then
        repeat wait() until game:IsLoaded()

    game:GetService("Players").LocalPlayer.Idled:Connect(function()
        game:GetService("VirtualUser"):ClickButton2(Vector2.new())
    end)

    local Player = game:GetService("Players").LocalPlayer
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local isTriple = "Single"

    function GetNearestEgg()
        local nearr = math.huge
        local near
        local plr = Player.Character.HumanoidRootPart

        for i, v in pairs(game:GetService("Workspace").Scripts.Eggs:GetChildren()) do
            if (plr.CFrame.p - v.Egg.Egg.CFrame.p).Magnitude < nearr then
                near = v.Name
                nearr = (plr.CFrame.p - v.Egg.Egg.CFrame.p).Magnitude
            end
        end
        return near
    end

    local lib = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
    local Wait = lib.subs.Wait

    local w = lib:CreateWindow({
        Name = "Rebirth Champions X",
        Themeable = {
        Info = "Script by Uzu#6389"
        }
    })

    local GeneralTab = w:CreateTab({
        Name = "General"
    })

    local FarmingSection = GeneralTab:CreateSection({
        Name = "Farming"
    })

    local PetSection = GeneralTab:CreateSection({
        Name = "Pets"
    })

    local ShopSection = GeneralTab:CreateSection({
        Name = "Shop"
    })

    local TeleSection = GeneralTab:CreateSection({
        Name = "Teleports",
        Side = "Right"
    })

    local MiscSection = GeneralTab:CreateSection({
        Name = "Misc",
        Side = "Right"
    })

    FarmingSection:AddToggle({
        Name = "Auto Click",
        Callback = function(v)
            _G.autoclick = v

            task.spawn(function()
                while task.wait() do
                    if not _G.autoclick then break end
                    ReplicatedStorage.Events.Click:FireServer()
                end
            end)
        end
    })

    FarmingSection:AddButton({
        Name = "Rebirth Gamepass",
        Callback = function()
            for i, v in pairs(Player.Passes:GetChildren()) do
                v.Value = true
            end
        end
    })

    PetSection:AddToggle({
        Name = "Open Nearest Egg",
        Callback = function(v)
            _G.autoegg = v

            task.spawn(function()
                while task.wait() do
                    if not _G.autoegg then break end    
                    local eggy = GetNearestEgg() 
                    ReplicatedStorage.Functions.Unbox:InvokeServer(eggy,isTriple)
                end
            end)
        end
    })

    PetSection:AddToggle({
        Name = "Triple Egg",
        Callback = function(a)
            asd = a

            if asd then
                isTriple = "Triple"
            else
                isTriple = "Single"
            end
        end
    })

    PetSection:AddToggle({
        Name = "Equip Best (10 sec)",
        Callback = function(v)
            _G.autobest = v

            task.spawn(function()
                while task.wait(10) do
                    if not _G.autobest then break end
                    firesignal(Player.PlayerGui.MainUI.PetsFrame.Additional.EquipBest.Click.MouseButton1Up)
                end
            end)
        end
    })

    PetSection:AddToggle({
        Name = "Craft All (3 sec)",
        Callback = function(v)
            _G.autocraft = v

            task.spawn(function()
                while task.wait(3) do
                    if not _G.autocraft then break end
                    firesignal(Player.PlayerGui.MainUI.PetsFrame.Additional.CraftAll.Click.MouseButton1Up)
                end
            end)
        end
    })

    ShopSection:AddToggle({
        Name = "Auto Upgrade",
        Callback = function(v)
            _G.autoupgrade = v

            task.spawn(function()
                while task.wait() do
                    if not _G.autoupgrade then break end
                    for i, v in pairs(require(ReplicatedStorage.Modules.UpgradesShop)) do
                        ReplicatedStorage.Functions.Upgrade:InvokeServer(tostring(i))
                    end
                end
            end)
        end
    })

    ShopSection:AddToggle({
        Name = "Auto Buy Potion",
        Callback = function(v)
            _G.autopotion = v

            task.spawn(function()
                while task.wait() do
                    if not _G.autopotion then break end
                    for i, v in pairs(require(ReplicatedStorage.Modules.Potions)) do
                        ReplicatedStorage.Events.Potion:FireServer(tostring(i))
                    end
                end
            end)
        end
    })

    for i, v in pairs(game:GetService("Workspace").Scripts.TeleportTo:GetChildren()) do
        TeleSection:AddButton({
            Name = v.Name,
            Callback = function()
                Player.Character.HumanoidRootPart.CFrame = v.CFrame
            end
        })
    end

    MiscSection:AddButton({
        Name = "Hide Errors",
        Callback = function()
            pcall(function()
                Player.PlayerGui.MainUI.Error:Destroy()
            end)
        end
    })
elseif game.PlaceId == 8554378337 then
        repeat wait() until game:IsLoaded()

    game:GetService("Players").LocalPlayer.Idled:Connect(function()
        game:GetService("VirtualUser"):CaptureController()
        game:GetService("VirtualUser"):ClickButton2(Vector2.new())
    end)

    local area = {}
    local boss_area = {}

    local autocollect = false
    local selected_type = "Teleport"
    local selected_mob_type = "Nearest"

    for i, v in pairs(game:GetService("Workspace").Fight:GetChildren()) do
        if string.find(v.Name,"FightArea") and not table.find(area,v.Name)then
            table.insert(area,v.Name)
        end
    end

    for i, v in pairs(game:GetService("Workspace").Fight:GetChildren()) do
        if v:FindFirstChild("BossTeleports") and not table.find(boss_area,v.Name) then
            table.insert(boss_area,v.Name)
        end
    end

    for i, v in pairs(game:GetService("ReplicatedStorage").CommonLogic.Fight.Models:GetChildren()) do
        if string.find(v.Name,"FightArea") then
            table.insert(area,v.Name)
        end
    end

    for i, v in pairs(game:GetService("ReplicatedStorage").CommonLogic.Fight.Models:GetChildren()) do
        if v:FindFirstChild("BossTeleports") and not table.find(boss_area,v.Name) then
            table.insert(boss_area,v.Name)
        end
    end

    table.sort(area)
    table.sort(boss_area)

    local selected_area = area[1]
    local selected_boss_area = boss_area[1]
    local selected_gamble_area = area[1]

    function getHighest()
        local high = {}
        for i, v in pairs(game:GetService("Workspace").Fight.Chests:GetChildren()) do
            for x, y in pairs(game.Workspace.Fight[selected_area].Root:GetChildren()) do
                if v.Name == y.Name then
                    table.insert(high,v.ChestHp.Value)
                    table.sort(high, function(a,b) return a > b end)            
                end
            end
        end
    
        for a, b in pairs(game:GetService("Workspace").Fight.Chests:GetChildren()) do
            for x, y in pairs(game.Workspace.Fight[selected_area].Root:GetChildren()) do
                if b.Name == y.Name and high[1] == b.ChestHp.Value then
                    return b.Name
                end
            end
        end    
    end
    
    function getMid()
        local mid = {}
        for i, v in pairs(game:GetService("Workspace").Fight.Chests:GetChildren()) do
            for x, y in pairs(game.Workspace.Fight[selected_area].Root:GetChildren()) do
                if v.Name == y.Name then
                    table.insert(mid,v.ChestHp.Value)
                    table.sort(mid, function(a,b) return a < b end)            
                end
            end
        end
    
        for a, b in pairs(game:GetService("Workspace").Fight.Chests:GetChildren()) do
            for x, y in pairs(game.Workspace.Fight[selected_area].Root:GetChildren()) do
                if b.Name == y.Name and mid[tonumber(string.format("%.g",#mid/2))] == b.ChestHp.Value then
                    return b.Name
                end
            end
        end  
    end
    
    function getLowest()
        local low = {}
        for i, v in pairs(game:GetService("Workspace").Fight.Chests:GetChildren()) do
            for x, y in pairs(game.Workspace.Fight[selected_area].Root:GetChildren()) do
                if v.Name == y.Name then
                    table.insert(low,v.ChestHp.Value)
                    table.sort(low, function(a,b) return a < b end)            
                end
            end
        end
    
        for a, b in pairs(game:GetService("Workspace").Fight.Chests:GetChildren()) do
            for x, y in pairs(game.Workspace.Fight[selected_area].Root:GetChildren()) do
                if b.Name == y.Name and low[1] == b.ChestHp.Value then
                    return b.Name
                end
            end
        end  
    end
    
    function getNear()
        local nearr,near = math.huge
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
    
        for i, v in pairs(game:GetService("Workspace").Fight.ClientChests:GetChildren()) do
            if (plr.Position - v.Root.Position).Magnitude < nearr then
                near = v
                nearr = (plr.Position - v.Root.Position).Magnitude
            end
        end
    
        return near
    end

    function getNearBoss()
        local nearr,near = math.huge
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
    
        for i, v in pairs(game:GetService("Workspace").Fight.ClientChests:GetChildren()) do
            if string.match(v.Name,"Boss") and (plr.Position - v.Root.Position).Magnitude < nearr then
                near = v.Root
                nearr = (plr.Position - v.Root.Position).Magnitude
            end
        end
    
        return near
    end
    
    function getQiChest()
        for i, v in pairs(game:GetService("Workspace").Fight.Chests:GetChildren()) do
            for x, y in pairs(game.Workspace.Fight[selected_area].Root:GetChildren()) do
                if v.Name == y.Name and string.find(v.Value,"ChestBaoXiang") then
                    return v.Name
                end
            end
        end
    end

    function doSomething(mob)
        local char,plr = game.Players.LocalPlayer.Character
        local plr = char.HumanoidRootPart

        if selected_type == "Teleport" then
            plr.CFrame = mob.CFrame * CFrame.new(0,0,5)
        elseif selected_type == "Tween" then
            local a = game:GetService("TweenService"):Create(plr, TweenInfo.new(.5, Enum.EasingStyle.Linear), {CFrame = mob.CFrame * CFrame.new(0,0,5)})
            a:Play()
        elseif selected_type == "Walk" then
            char.Humanoid:MoveTo(mob.Position)
        end
    end

    function teleport(part)
        local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
        hrp.CFrame = part.CFrame * CFrame.new(0,2,5)
    end

    _G.autofarm = false
    _G.autogamble = false
    _G.autoboss = false

    game:GetService("RunService").Stepped:Connect(function()
        if _G.autofarm and selected_type ~= "Walk" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end)

    local library = loadstring(game:HttpGetAsync("https://pastebin.com/raw/znibQh36"))()
    local Window = library:CreateWindow("Weapon Fighting")
    local Farming_Folder = Window:AddFolder("Farming")
    local Boss_Folder = Window:AddFolder("Boss")
    local Gamble_Folder = Window:AddFolder("Gamble")
    local Misc_Folder = Window:AddFolder("Misc")

    Farming_Folder:AddToggle({
        text = "Chest Farm", 
        state = _G.autofarm,
        callback = function(v) 
            _G.autofarm = v

            task.spawn(function()
                while task.wait() do
                    if not _G.autofarm then break end
                    pcall(function()
                        local chest
                        local chestLoc
                        if selected_mob_type == "Nearest" then
                            chest = getNear()
                            chestLoc = chest.Root
                        elseif selected_mob_type == "High Hp" then
                            chest = getHighest()
                            chestLoc = game:GetService("Workspace").Fight.ClientChests[tostring(chest)].Root
                        elseif selected_mob_type == "Mid Hp" then
                            chest = getMid()
                            chestLoc = game:GetService("Workspace").Fight.ClientChests[tostring(chest)].Root
                        elseif selected_mob_type == "Low Hp" then
                            chest = getLowest()
                            chestLoc = game:GetService("Workspace").Fight.ClientChests[tostring(chest)].Root
                        elseif selected_mob_type == "Qi Chest" then
                            chest = getQiChest()
                            chestLoc = game:GetService("Workspace").Fight.ClientChests[tostring(chest)].Root
                        end
                        
                        doSomething(chestLoc)

                        repeat task.wait(.5)
                            doSomething(chestLoc)
                            fireclickdetector(chestLoc.ClickDetector,69)
                        until not _G.autofarm or not game:GetService("Workspace").Fight.ClientChests[chest].Root 
                    end)
                end
            end)
        end
    })

    Farming_Folder:AddList({
        text = "Farming Type", 
        values = {"Teleport","Tween","Walk"}, 
        callback = function(v) 
            selected_type = v 
        end
    })

    Farming_Folder:AddList({
        text = "Chest Type", 
        values = {"Nearest","High Hp","Mid Hp","Low Hp","Qi Chest"}, 
        callback = function(v) 
            selected_mob_type = v
            print(selected_mob_type)
        end
    })

    Farming_Folder:AddList({
        text = "Select Area", 
        values = area, 
        callback = function(v) 
            selected_area = v
        end
    })

    Farming_Folder:AddToggle({
        text = "Collect Rewards", 
        state = autocollect,
        callback = function(v) 
            autocollect = v

            local d = require(game:GetService("ReplicatedStorage").CommonConfig.CfgGlobal)
            
            if autocollect then
                d.RewardCollectRadius = 9e99
            else 
                d.RewardCollectRadius = 12
            end
        end
    })

    Boss_Folder:AddToggle({
        text = "Boss Farm", 
        state = _G.autoboss,
        callback = function(v) 
            _G.autoboss = v

            task.spawn(function()
                while task.wait() do
                    if not _G.autoboss then break end
                    pcall(function()
                        if open_chest then
                            local area_number = string.match(selected_boss_area,"%d")
                            game:GetService("ReplicatedStorage").CommonLibrary.Tool.RemoteManager.Funcs.DataPullFunc:InvokeServer("ArenaOpenChestChannel", area_number-1, "c1", false)
                        end
                        wait(1)
                        game:GetService("ReplicatedStorage").CommonLibrary.Tool.RemoteManager.Funcs.DataPullFunc:InvokeServer("ArenaTeleportLeaveChannel", "Out")   
                        wait(1)
                        teleport(game:GetService("Workspace").Fight[tostring(selected_boss_area)].BossTeleports.Platform.Platform)
                        wait(1)
                        local room_num = tonumber(string.match(selected_boss_area,"%d"))
                        game:GetService("ReplicatedStorage").CommonLibrary.Tool.RemoteManager.Events.BossRoomStartEvent:FireServer(room_num,"room1")                    
                        game:GetService("ReplicatedStorage").CommonLibrary.Tool.RemoteManager.Events.BossRoomStartEvent:FireServer(room_num,"room2") 
                        wait(2)                    
                        local near = getNearBoss()
                        teleport(near)
                        wait(.7)
                        fireclickdetector(near.ClickDetector,69)
                        repeat task.wait(.5) 
                            teleport(near)
                            fireclickdetector(near.ClickDetector,69)
                        until not near or not _G.autoboss
                    end)
                end
            end)
        end
    })

    Boss_Folder:AddList({
        text = "Select Area", 
        values = boss_area, 
        callback = function(v) 
            selected_boss_area = v
        end
    })

    Boss_Folder:AddToggle({
        text = "Open Boss Chest", 
        state = open_chest,
        callback = function(v) 
            open_chest = v
        end
    })

    Gamble_Folder:AddToggle({
        text = "Auto Gamble", 
        state = autogamble,
        callback = function(v) 
            autogamble = v
    
            task.spawn(function()
                while task.wait() do
                    if not autogamble then break end
                    for i, v in pairs(game.Workspace.Fight[selected_gamble_area].Gamble:GetChildren()) do
                        if v:IsA("Part") then
                            teleport(v)
                            game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
                            game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)
                        end
                    end
                end
            end) 
        end
    })

    Gamble_Folder:AddList({
        text = "Select Area", 
        values = area,
        callback = function(a) 
            selected_gamble_area = a
        end
    })

    Misc_Folder:AddButton({
        text = "Auto Hide Claimed Spells",
        callback = function()
            local PlayerGui = game:GetService("Players").LocalPlayer.PlayerGui
            PlayerGui.ChildAdded:Connect(function(asd)
                if asd.Name == "ScreenRwdGui" then
                    asd:Destroy()
                    wait(2)
                    PlayerGui.MainGui.ScreenGui.Enabled = true
                end
            end)
        end
    })

    Misc_Folder:AddButton({
        text = "Unlock Some Gamepass",
        callback = function()
            local a = require(game:GetService("ReplicatedStorage").CommonLogic.Model.GamePasses)
            a.HasGamePass = function() return true end
        
            game:GetService("Players").LocalPlayer.PlayerGui.MainGui.ScreenGui.MainLeftBarView.FrameChild3.BgTeleport.ImgMask.Visible = false
        end
    })

    Misc_Folder:AddButton({
        text = "Invisible",
        callback = function()
            pcall(function()
                for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("MeshPart") and v.Name ~= "Head" and v.Name ~= "LowerTorso" and v.Name ~= "UpperTorso" then
                        v:Destroy()
                    end
                end
                game.Players.LocalPlayer.Character.Humanoid.Animator:Destroy()
                game.Players.LocalPlayer.Character.LowerTorso.Root:Destroy()
                game.Players.LocalPlayer.Character.NameTag:Destroy() 
            end)
        end
    })

    Misc_Folder:AddButton({
        text = "Reload Script",
        callback = function()
            loadstring(game:HttpGet("https://pastebin.com/raw/Bd6R0GaC"))()
        end
    })

    Misc_Folder:AddBind({
        text = "Toggle GUI", 
        key = "LeftControl", 
        callback = function() 
            library:Close()
        end
    })

    library:Init()
end

local bb = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:Connect(function()
	bb:CaptureController()
	bb:ClickButton2(Vector2.new())
end)
